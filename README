Batch 21:
Schedule for rest of the course:
* JAVA        	-->  2.5 months --> COMPLETED
* HTML        	-->  2-2.5 fays --> COMPLETED
* Selenium    	-->  1.5 months (UI(Frontend Testing tool))
* Cucumber   	-->  4-5 days (Collaboration tool) --> Technical - Non-Technical
* API        	-->  8-10 days (BackEnd Testing Tool)
  --> POSTMAN (Manual Testing)
  --> Rest - API (Automotaion Testing Tool)
* Appium    	 --> 3-4 days for Mobile Testing
* SQL       	 --> 4-6 days for DATABASE
* Jenkins  		 --> 1-2 days for Remote Run
* Selenium Grid  --> 1 day for Parralell Testing
* Github 		 --> 1 day for Version Control
* Graduation 	 --> 1 day for Graduation Ceremony and Resume Preparation

=================================WELCOME to HTML ====================================


HTML --> tool to create a website
HTML: (HypeText Markup Language)
		--> is the purpose of learning html?
		*HTML is a way to organize / create / sctructured your tags, pictures, videos and
		special attributes on the website
		* It is a markup language and we are going to use html to be able to :
		** During automation, you will find the location of the element to automate the process.
		(HTML knowledge makes is faster and easier);
		** We are going to get used to HTML structure of website which will "Boost Your Automotaion
		Skills"
	--> what is the components of the HTML ?
			* HTML : is kinda your "SKIN" that covers everything on the website
			* HEAD : is kinda your "HEAD", that cover important part of the website(title)
			* BODY : is kinda your "BODY" that covers most of the parts of website.



Lesson 2

Recap
HTML : HyperText Markup Language

	--> HTML ( Parent of everything)
	--> HEAD(Sibling of Body or Child of HTML)
	--> BODY (Sibling of Head or Child of HTML)
Purpose of Learning HTML :
	--> Boosting your Automation Skills (UI);

Tags: (Special Keywords for some functions)
	* h1 - h6   --> Headers(h1 --> Largest h6 --> Smallest)
	* p 	    --> Paragraph
	* ol 	    --> Ordered List (comes with li) --> (1,2,3,4,5,6)
	* ul 	    --> Unordered List (comes with li) --> (* * * * * *)
	* br 	    --> Break (makes a full line of space)
	* strong, b --> Bold (it makes the word/s bold )
	* em,i 		--> Italic (it makes the word/s italic)
	* a 		--> Anchor (it makes the word/s clickable)
	* hr 		--> Horisontal (It makes a horizontal line)
	* u 		--> Underline (It Underline word or words)
	* img 		--> Image ( You can put on the website)

	ATTRIBUTES : Special sub-features
	* href:"url" 		--> you will provide the source of website link(url) in here
	 < a href = "https://www.amazon.com/" >Amazon<
 	* target : "blank"	--> You can open the link with a new tab
 	 < a href = "https://www.amazon.com/" target ="_blank" >Amazon<
 	* style : 			--> It is the way to do some stylish things
 					--> color  --> Background Color  --> Text Allign(center)
 	SPECIAL FEATURES:
 	&nbsp; --> It makes a single space

 	CSS: Cascading Style Sheet
 	it is a way to style up your website like color, Background-color,
 	layouts, front etc
 			--> Why do we use CSS?
 				* During the Automation, time to time we eill be asked to validate "COLOR"
 				ot "Background-Color" of the webElement



 Lesson 3

 HTML: HyperText Markup Language --> BOST YOUR AUTOMATION SKILLS
 Tags : h1-h6,u,a,hr,br,em,i,strong,b,body,html,head,title
 img,link,button,label,input,p,ol,ul, li, table, tbody,thead,th, td,tr;
ATTRIBUTES: src(img), href(a), target(a(_blank)), width(img)
id, class,border(table), placeholder(input),style
SPECIAL SIGN: &nbsp

CSS: Cascading Style Sheet(It is all about style of the website)
* COLOUR   * Background-Color

h3{
  color=blue;
  background-color=yellow;
}

#id -->It finds the element with CSS and ID attribute

.class -->it finds the element with CSS and class attribute


===================WELCOME TO SELENIUM ==========

1- What is Selenium?
		--> Selenium is an UI automation tool. It works with only
		"Web Application(browser)"(chrome,safari,edge,firefox,Ebay,Facebook)


2-Why do we need Selenium?

To make the testing (UI) faster and more reliable because automation
does not overlook,

3 - How do you use Selenium ?
		To be able to use Selenium, we need an IDE(Intellij) and Selenium
		Library.

INTERVIEW QUESTIONS :

1 - Can you tell what UI automationtool you are using and what is the advantage
and disadvantage of it ?
--> I am using "SELENIUM" for UI Automation tool.
disadvantage:
1-Selenium cannot automate pictures, captcha
2-Selenium does not have any customer Service
3 - Selenium does not have report card system
4-Selenium can automate only "WEB Applications" (WEB BROWSER)
advantage:
1-Selenium is an open free source(Github example)
2-Selenium has a big community
3-Selenium supports multiple browsers and languages

2 - Can you tell types of Selenium and which one do you use in your
	current automation framework?

	We have multiple types of Selenium
	*Selenium RC : (Remote Control) --> remotely check servers during automation
	*Selenium IDE: (Integretion Development Environment) --> Record and Run
	*** Selenium WebDriver *** -->> It is a Librarythat we can add our project
	* Selenium Grid --> It is all about paralell testing



Lesson 03

INTERVIEW QUESTIONS:

1 - What is the difference between driver.get() and driver.navigate() ?
		A--> driver.get() waits for all webElement to be loaded on the page
		A--> driver.navigate.to() waits fpr certain elements that you are looking for
		B--> driver.get() does not have methods
		B--> driver.navigate does have 4 methods(refresh, back,froward,to)
2-What is the difference between driver.close() and driver.quit()
		  A-->driver.close will close only current page(one)
  		A-->driver.quit() will close all the pages that opened during automation(>=one)

 Lesson 04

 INTERVIEW QUESTIONS:

1-What type of locators do you use during UI automation in Selenium ?

  LOCATORS:It is a way to find the location of WebElement

  There are 8 types of locators in Selenium?

   *Id                  (driver.findElement(By.id("IdAttributeValue")))

   *Name                (driver.findElement(By.name("NameAttributeValue")))

   *ClassName           (driver.findElement(By.className("ClassNameAttributeValue"))

   *TagName             (driver.findElement(By.tagName("TagName")))

   *LinkText            (driver.findElement(By.linkText("textValue"))) + MUST HAVE "a" tagname

   *PartialLinkText     (driver.findElement(By.PartialLinkText("partialText"))) +Must Have "a" Tagname

 ***CSS                 (driver.findElement(By.cssSelector("#id" or ".class")))

 ***XPATH               (driver.findElement(By.xpath()))

2-Which one do you use the most ?

  I prefer using CSS first since it is easy to use and fast, but for flexibility I would rather

  using XPATH.

  WebElement Methods:

  WebElement element=driver.findElement(By.id("idValue"));

  element.

    *getText()                              -->It gets the text from WebElement

    *sendKeys()                             -->It writes the data on the boxes

    *click()                                -->It clicks the WebElement

    *isDisplayed()                          -->It checks the WebElement is visible or not

    *isSelected()                           -->It checks the WebElement is selected or not

    *isEnabled()                            -->It checks the box is clickable or not.


Lesson 05

LOCATOR:It is a way to locate the WebElement

 *XPATH:Is the advance, flexible locator type

INTERVIEW QUESTION:

1-What is the difference between Absolute and Relative Xpath and which one do you use the most?

  *Absolute Xpath:/html/div[2]/div/a[@id='idValue'] -->Single Slash + Starts from 'html'

  *Relative Xpath://a[@id='idValue'] or //div//a[@id='idValue'] -->Double Slash + Directly Child

  or Parent/Child

XPATH Structure:

    1-//TagName

*** 2-//TagName[@Attribute='AttributeValue']

 ** 3-//TagName[contains(text(),'textValue')] -->contains matchup Text

 *  4-//TagName[.='textValue']                -->%100 Matchup Text

-->I use the most is "RELATIVE XPATH" because It is easier and flexible.


=======================SELENIUM LVL 2 =============================================

RECAP:8/10/2024

TestNG --> is a framework to support and make your automation framework organized,structured

and professional.

    --> @Test --> is like "main Method" which is an engine to execute your code.

@Test                                  @Test
public void validateHeader(){          public void validateNegativeScenario(){}

}                                       }

    --> Assert -->is a class that does validation for your test cases

@Test                                     @Test                                 @Test
public void validateTitle(){              public void validateIsDisplayed(){    public void checkBox(){

  Assert.assertEquals(actual,expected)    Assert.assertTrue(item.isDisplayed)   Assert.assertFalse(box.isSelected)
}

KeyWords of TestNG:

--> @Test(priority=1)                    --> @Test(priority=2)                  @Test(invocationCount=20)
    public void validateHeader(){}           public void validateTitle(){}      public void createMockData()

INTERVIEW QUESTIONS:

1-How do you do you validations in your framework?

 -->I use Assert class with:

    *Assert.assertEquals(actual,expected) -->it compares actual valute with expected value

    *Assert.assertTrue(actual.contains(expected)) -->It checks the boolean condition is "TRUE" (actual.contains(expected))

    *Assert.assertFalse(box.isSelected) -->It checks the box should not be selected.Condition is expected "FALSE"

2-How do you change the execution order of your test Cases?

   -->I use "Priority" keyword for that.


Lesson 06

TestNG:

1-What is TestNG?

  It is a framework(libraries,methods,variables,classes,etc...)(Selenium Framework,Java Framework)

2-Why do we need TestNG?

  To be able to make your automation framework("More Organized","Professional","Structured")

    -->We need to download TestNG library(Dependency) from MVN repository.
<!-- https://mvnrepository.com/artifact/org.testng/testng -->
<dependency>
    <groupId>org.testng</groupId>
    <artifactId>testng</artifactId>
    <version>7.10.2</version>
    <scope>test</scope>
</dependency>


Lesson 07


RECAP:8/13/2024

ACTIONS CLASS: It is a class to handle "MOUSE ACTIONS"

  Actions actions=new Actions(driver);

  actions.

    * contextClick    --> It right clicks on WebElement

    * doubleClick     --> It double clicks on WebElement

    * moveToElement   --> It hovers over the WebElement

    * dragAndDrop     --> It drags the WebElement and Drop to the Target

    * click           --> It clicks the WebElement

    * sendKeys        --> It sends the data to the box

    * scrollByAmount  --> It scrolls the page based on pixel (x,y) (300,300)

  *** perform         --> It performs the action


  INTERVIEW QUESTIONS:

  1- How do you handle "NOSUCH ELEMENT EXCEPTION" ?

    -->If something fails(red on the console and Exception keyword), please follow these steps

      *Always cherck the console and find "Exception Type" thenn continue reading and make sure your

      exception type is "NOSUCHELEMENT".

      *Then Scroll all the way down from console and click "BLUE LINK" which will point th exact location

      of failure.

       SOLUTION:

         *Your locator type might be wrong, please check and fix it

         *Your locator value might be missing or wrong, please check and fix it

         *You are looking for the element in a correct page (Please observe your automation with Thread.sleep)

         *Automation is so fast, so you need to put Thread.sleep (MOSTLY IT HAPPENS AFTER CLICK)

  2- How do you handle "STALE ELEMENT REFERENCE EXCEPTION" ?

     -->This exception is all about "UPDATING","REFRESHING","UPLOADING" the html(DOM)

       SOLUTION:

        * Put Thread.sleep() before failure(find the location of failure from console)

      *** Re-assign the WebElement

        * driver. navigate.refresh()(LEAST USAGE)

  3- How do you handle "INVALID SELECTOR EXCEPTION"?

     -->This exception happens when there is a "synthax issue" on the locator value

    SOLUTION:

       * Simply copy your value into the website and make sure it is unique.

       * It mostly happens for XPATH locator.

   4- Can you tell me 5 Exceptions that you faced during Automation?

     *NOSUCH ELEMENT EXCEPTION

     *STALE ELEMENT REFERENCE EXCEPTION

     *INVALID SELECTOR EXCEPTION




   Lesson 08

   RECAP:8/14/2024

 ACTIONS: It is a class to handle "MOUSE ACTIONS"

  *clickAndHold -->It clicks and Holds the WebElement

  *release      -->It releases the WebElement that is hold(Generall it is used after ClickAndHold)


 Horizontal Slider:

  In some automation test cases, I faced this kind of sliders

  *I specifically handle it with "KEYS" class from Selenium

  Keys.ENTER                        -->It presses the "ENTER" button from keyboard

  Keys.ARROW up/down/right/left     --> It presses the arrows button


  JAVASCRIPT:It is a programming language that we use it time to time to handle specific functions(click,scroll)

  JavaScriptExecutor js=(JavaScriptExecutor) driver;

  *js.executeScript("arguments[0].click()",WebElement);              -->It clicks the WebElement

  *js.executeScript("arguments[0].scrollIntoView(true)",WebElement)  -->It scrolls to the WebElement


 -->How to handle ElementClickIntercepted Exception?

   *This exception is thrown when the element is not visible on the screen and also you are trying to

   click this element.(something might be blocking or not visible on screen)

   SOLUTION:You need to scroll to the WebElement and make it visible.


   Lesson 09

   RECAP:8/17/2024

WINDOW HANDLE: It is a way to switch the windows which we need to automate. (windows,tabs...)


  Set<String> allPagesID=driver.getWindowHandles(); // size 3

  for(String pageID:allPagesID){

    driver.switch.window(pageId);

    If(driver.getTitle("amazon")){
      break;
    }
  }

  BrowserUtils.switchWindow(driver,"amazon");


IFRAME: Html inside html. It is about protection.

  -->Customers want to give some ads,doc,videos.. through websites.The websites renting the spaces from their main

  html and ask customers to send their html structure. Then they embed(put) the html inside of main html.

 -->You need to make sure the WebElement that you are looking for is inside of Iframe.

 -->Mostly, if the WebElement is in iframe and if you do not handle it.It throws "NOSUCH ELEMENT EXCEPTION".

 -->driver.switchTo.frame(WebElement) **

 -->driver.switchTo.frame(Name or ID) ***

 -->driver.switchTo.frame(index) *

INTERVIEW QUESTIONS:

1-What is the difference between driver.getWindowHandle and driver.getWindowHandles?

  getWindowHandle -->Return single PageId     -->String

  getWindowHandles -->Return multiple pageId  -->Set<String>


2-Where do you use collections in your automation framework?

  List --> FindElements method

  Set  --> GetWindowHandles method


  Lesson 10


  RECAP:8/19/2024

NESTED FRAME: It is html inside html

  Sign of nested frame:

   *frameset --> it is a big sign of having multiple frame in the website

 --> driver.switchTo.frame("TopFrame");

 --> driver.switchTo.frame("LeftFrame");

 --> driver.switchTo.ParentFrame();

 *** driver.switchTo.defaultContent() ==> It goes to directly to the main html


 INTERVIEW QUESTIONS:

 1-How do you handle pop-up in Selenium?

  There are several ways to handle pop-up in Selenium:

    *OS(Operation System) pop-up -->It directly comes from OS, so we do not handle it with Selenium(Robot class)

    *HTML pop-up                 -->We handle this pop-up simply inspect and click the button

  ***JS(Java Script) pop-up      --> We handle JS pop-up with "ALERT INTERFACE" from Selenium

     -->Alert alert=driver.switchTo.alert();

       *alert.accept()   -->It clicks "OK" button

       *alert.dismiss()  -->It clicks "CANCEL" button

       *alert.getText()  -->It gets the text from pop-up

       *alert.sendKeys() -->It sends the data to the pop-up


 2-How do you upload file in Selenium?

   To be able to upload any file in Selenium, I find the location of file(Right Click get info) then I sendKeys

   to the location of ChooseFile. I will upload the file


 3-What is the difference between SoftAssert and HardAssert?

   Hard Assert:

  1-It is strict about failure, it means once your test fails then your execution will "STOP" at the line it fails

  2-You do not need to create an object to use Assertion. (Assert.assertEquals) -->STATIC METHODS

  3-There is no activation needed to apply validation

   Soft Assert:

   1-It is flexible about failure, It means once your test fails then your execution will "CONTINUE" for next lines

   2-You do need to create an object to use softAssertion (SoftAssert softAssert=new SoftAssert) -->NO STATIC METHODS

   3-You must use "softAssert.assertAll()" method to be able to activate.


   *NoSuchFrame Exception:It happens once you are looking an iframe in a wrong spot and also the value of the

   iframe might be wrong

   SOLUTION:Check your frame value(Most common mistake) and Check that you are in the correct frame(nested frame)

   *UnHandledAlert Exception: It happens once you do not handle the alert that it pop-up.

    SOLUTION: Check the timing is good(it means you are not switching your alert before it pop-ups)


=======================LEVEL 3 ===============================

POM(Page Object Model): It is way to to "ORGANIZE" all the webElements, Pages, Tests, etc...
	---> It mean this Model will make your code more "Professional", "Organized" and "Structured"(Well Maintained)
	---> We will apply this model on a project step by step


	 Lesson 11


RECAP:8/20/2024

POM:It is a model to make your automation framework more organized,professional ..etc


  com,edu,gov   --> It says the project that you are working is UI(Website)

  qa,dev,stage  --> It says the environment that you are doing testing

  bank          --> It is the name of the project

    *pages      --> You store your "constructor" (It initiliaze your WebElements) , "WebElements" , "Methods"

          1- public LoginPage(WebDriver driver){PageFactory.initElements(driver,this)}

          2- @FindBy(xpath("//a[@id='ahmet']"))

           WebElement element;

          3- public void addCustomerFunctionality(){customer.click; customer.sendKeys("Ahmet")}

    *tests      --> You store your @Test annotations in this class , actual execution happens in here.
Свернуть
message.txt
1 кб




	 Lesson 12


	 RECAP:8/21/2024

INTERVIEW QUESTIONS:

1-What do you know about TestBase?

  TestBase is a class which I store "BeforeMethod & AfterMethod" annotations.

   *@BeforeMethod --> It runs before every "@Test" annotations.

                  --> We use it to setup our automation and navigation for the URL

                  --> You will not repeat yourself for the @Test (setup)

   *@AfterMethod  --> It runs after every "@Test" annotations

                  --> We use it for ScreenShot

                  --> We use it for tearDown(driver.quit())

NOTES: To be able to access the BeforeMethod and AfterMethod from test classes.We do inheritance ("EXTENDS") keyword.

2-What is DriverHelper?(What makes your automation special?)

  -->DriverHelper:Is a special class(Singleton Pattern Design) that I use "ENCAPSULATION" -->private keyword

     *private Constructor

     *if(!driver==null) -->condition

  NOTE:DriverHelper class will "CENTRALIZE" your driver. We can choose any browser we want to initiliaze.(chrome..)

   -->ConfigReader:Is a special file that you hide/protect your private data in here.

      *Once you push your code to github(online storage),team will be able to see your username,password...

      *ConfigReader will prevent it to be seen by them.

   -->GetScreenShot:Is a method that I use to get screenshot once something fails during automation

      * Why is it important ?

        & You can easily see the the step that it is failing

        & You can easily send the screenshot to developer about the issue(bug)

        & Sometimes it is related with QA environment(slowness,glitch), the screenshot can help you to understand

        it is not a test case issue, it is an enviroment issue.


3-Can you make your constructor private,static,final?

   -->You cannot make the constructor static or final but you can make it private with Singleton Pattern Design

   (Centralizing your Driver) -->DriverHelper

4-Where do you use OOP in your automation framework?

   *PolyMorphism            --> WebDriver driver =new ChromeDriver()  , List list=new ArrayList()

   *Inheritance             --> Extends keyword from TestClasses to TestBase

   *Encapsulation           --> Singleton Pattern Design (DriverHelper)

   *Interface               --> Alert alert = driver.switchTo.alert(); (Alert is interface) (WebDriver)



Lesson 13


RECAP:8/24/2024

INTERVIEW QUESTIONS:

1-How do you create Regression and Smoke Suite with TestNG?

  To be able to create Suites we need to follow these steps

    *Create .xml file (Regression.xml,Smoke.xml)

    *Add the doctype from TestNG documentation at the top of the xml file(
       (<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">)

    *Add Specific Structure

    <suite name="Regression Suite">

      <test name="Bank Test Cases">

        <classes>

            <class name="com.qa.bank.tests.BankLoginTest"> <class>
            <class name="com.qa.bank.tests.BankManagerTest"> <class>
            <class name="com.qa.bank.tests.BankCustomerTest"> <class>

     NOTE:TO be able to activate Suite Run(once) click tools( at the menu) -->XML actions --> XSD Schema

      -->Delete the XSD file from Runner package.

2-How do you create and share your test report with your team?

  First of all, to be able to create TestNG report, you need to activate "LISTENERS" in your xml file

    *Run your xml file (Regression,Smoke)

    *Click Drop-Down at the top which ends with .xml

    *Click Edit Configuration

    *Click Listeners at the middle of screen

    *Click "+" to add listeners

    *First you add "Emailable Report" -->PLS Mention

    *Second you add "Failed Report"   -->PLS Mention

    *Run your xml again to get the report


  HOW DO YOU SHARE YOUR REPORT:

    -->I e-mail this report (emailable report) that I have from regression

    -->I send the link through channels(google meet,slack etc..)

    -->I can download it to Google driver and share the location with my team through chat/email.

3-How do you run failed tests after regression in your Automation Framework ?

  First of all, you need to activate FailedTests in your Listeners.

    *This file will be seen when there is failure

    *This file will store only Failures, so you just need to fix the issues and then run from here.(ONLY FAILURES)

Lesson 14

RECAP:8/26/2024

@Parameters(from TestNG) --> It is a way to parameterized the data through xml file.


  XML FILE:

  <!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">

<suite name="Regression Suite">

    <test name="Blaze Test">

      <parameters name="name" value="Ahmet"
      <parameters name="lastName" value="Baldir"

       <classes>

           <class name="com.qa.blaze.tests.BlazeSignUpTest"> <class>


JAVA CLASS:


@Parameters({"name","lastName"}) //this part is a link between xml to .java
@Test
public void validateLoginFunctionality(String name,String lastName){
  sout(name + lastName)
}

NOTE:Once you have parameters annotation, you have to run your tests from "XML" file.

ENHANCEMENTS:

-->Centralized WebElements     -->Page Classes

-->Centralized Methods         -->Page Classes

-->Centralized Tests           -->Test Classes

-->Centralized Driver          -->DriverHelper

-->Centralized Test Cases      -->.xml file(Regression)

-->Centralized Parameters      -->.xml file

-->Centralized private Data    -->Config.Reader